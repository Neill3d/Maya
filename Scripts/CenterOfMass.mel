// declare variablesint $m_radius = 10;int $m_startFrame = 19;int $m_endFrame = 56;int $UseHands = 1;int $m_reducePath = 1;proc DoIt(int $r, int $st, int $ed, int $uh, int $rp) {	// declare local var's	int $i;	// creating circle (center of mass geom figure)	circle -r $r -nr 0 1 0 -n "centerOfMass";	/*  		creating keyframes for all animatable keys of this one objects	*/	for ($i=$st; $i<=$ed; $i++) {		currentTime $i;		float $hipsX = `getAttr HipsEff.translateX`;		float $hipsZ = `getAttr HipsEff.translateZ`;		float $RightFootX = `getAttr RightFootEff.translateX`;		float $RightFootZ = `getAttr RightFootEff.translateZ`;		float $LeftFootX = `getAttr LeftFootEff.translateX`;		float $LeftFootZ = `getAttr LeftFootEff.translateZ`;		float $centerX;		float $centerZ;		if ($uh == 1) {			float $RightHandX = `getAttr RightHandEff.translateX`;			float $RightHandZ = `getAttr RightHandEff.translateZ`;			float $LeftHandX = `getAttr LeftHandEff.translateX`;			float $LeftHandZ = `getAttr LeftHandEff.translateZ`;			$centerX = ($hipsX + $RightFootX + $LeftFootX + $RightHandX + $LeftHandX) / 5;			$centerZ = ($hipsZ + $RightFootZ + $LeftFootZ + $RightHandZ + $LeftHandZ) / 5;		} else {			$centerX = ($hipsX + $RightFootX + $LeftFootX) / 3;			$centerZ = ($hipsZ + $RightFootZ + $LeftFootZ) / 3;		}		move -a $centerX 0 $centerZ centerOfMass;		setKeyframe -breakdown 0 -hierarchy none -controlPoints 0 -shape 0 {"centerOfMass"};	}	// reduce curve for center of mass	if ($rp == 1) {		filterCurve -f simplify -timeTolerance 0.05  {"centerOfMass.translateX"};			filterCurve -f simplify -timeTolerance 0.05  {"centerOfMass.translateY"};			filterCurve -f simplify -timeTolerance 0.05  {"centerOfMass.translateZ"};		}}window -t "Center of Mass" -wh 400 400 MassWin;columnLayout;intField -minValue 1 -maxValue 1000 -value $m_radius fieldRadius;intField -minValue 1 -maxValue 100 -value $m_startFrame fieldStartFrame;intField -minValue 1 -maxValue 100 -value $m_endFrame fieldEndFrame;connectControl fieldRadius ("$m_radius");connectControl fieldStartFrame ("$m_startFrame");connectControl fieldEndFrame ("$m_endFrame");checkBox -label "Use hands eff's" -al left	-onc "$UseHands = 1"	-ofc "$useHands = 0";button -label "Do it!" -w 70 -c " DoIt($m_radius, $m_startFrame, $m_endFrame, $UseHands, $m_reducePath) ";showWindow MassWin;